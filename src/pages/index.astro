---
import { getCollection } from "astro:content";
import Container from "@components/Container.astro";
import PageLayout from "@layouts/PageLayout.astro";
import ArrowCard from "@components/ArrowCard.astro";
import Link from "@components/Link.astro";
import { dateRange } from "@lib/utils";
import { SITE, HOME, SOCIALS } from "@consts";

import type { CollectionEntry } from "astro:content";

const projects: CollectionEntry<"projects">[] = (await getCollection("projects"))
  .filter((project: CollectionEntry<"projects">) => !project.data.draft)
  .sort((a: CollectionEntry<"projects">, b: CollectionEntry<"projects">) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.NUM_PROJECTS_ON_HOMEPAGE);

const allwork: CollectionEntry<"work">[] = (await getCollection("work"))
  .sort((a: CollectionEntry<"work">, b: CollectionEntry<"work">) => new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf())
  .slice(0, SITE.NUM_WORKS_ON_HOMEPAGE);

const work = await Promise.all(
  allwork.map(async (item: CollectionEntry<"work">) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

const allEducation: CollectionEntry<"education">[] = (await getCollection("education"))
  .sort((a: CollectionEntry<"education">, b: CollectionEntry<"education">) => new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf())
  .slice(0, SITE.NUM_EDUCATION_ON_HOMEPAGE);

const education = await Promise.all(
  allEducation.map(async (item: CollectionEntry<"education">) => {
    const { Content } = await item.render();
    return { ...item, Content };
  })
);

// Vérif si aucune donnée dans education
if (!education || education.length === 0) {
  console.warn("Aucune donnée trouvée pour la collection 'education'.");
}

const veille: CollectionEntry<"veille">[] = (await getCollection("veille"))
  .slice(0, 2);
---

<PageLayout title={HOME.TITLE} description={HOME.DESCRIPTION}>
  <Container>
    <!-- Conteneur pour la photo et le texte -->
    <div class="flex flex-col items-start space-y-4">
      <img src="/portfolio/src/photo_cv.jpg" alt="Photo" class="w-auto h-32 rounded-full animate" />
      <h4 class="animate font-semibold text-black dark:text-white">
        > Bonjour, je m'appelle Faustine !
      </h4>
    </div>
    <div class="space-y-16">
      <section>
        <article class="space-y-4">
          <p class="animate">
            Je suis étudiante en fin de deuxième année de BTS SIO - option SLAM.
          </p>
          <p class="animate">
            Après avoir fait deux ans de licence LLCER pour approfondir mon niveau d'anglais écrit et oral, 
            je me suis redirigée vers un autre domaine complètement différent mais qui m'attirait depuis longtemps 
            : l'informatique.
          </p>
          <p class="animate">
            Outre le développement informatique, je suis passionnée par la danse, plus particulièrement le hip-hop, que
             je pratique depuis maintenant plus de 10 ans.
          </p>
          <p class="animate">
            Sur ce portfolio, vous pourrez retrouver mon parcours scolaire et professionnel ainsi que mes projets. 
            Bonne visite !
          </p>
        </article>
      </section>

      <!-- Section Expérience professionnelle -->
      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Expérience professionnelle
          </h5>
          <Link href="/work">
            Voir tout
          </Link>
        </div>
        <ul class="flex flex-col space-y-4">
          {work.map((entry) => (
            <li>
              <div class="text-sm opacity-75">
                {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              </div>
              <div class="font-semibold text-black dark:text-white">
                {entry.data.company}
              </div>
              <div class="text-sm opacity-75">
                {entry.data.role}
              </div>
              <article>
                <entry.Content />
              </article>
            </li>
          ))}
        </ul>
      </section>

      <!-- Section Formation -->
      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Formation
          </h5>
          <Link href="/education">
            Voir tout
          </Link>
        </div>
        <ul class="flex flex-col space-y-4">
          {education.map((entry) => (
            <li>
              <div class="text-sm opacity-75">
                {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              </div>
              <div class="font-semibold text-black dark:text-white">
                {entry.data.institution}
              </div>
              <div class="text-sm opacity-75">
                {entry.data.program}
              </div>
              <article>
                <entry.Content />
              </article>
            </li>
          ))}
        </ul>
      </section>

      <!-- Section Projets -->
      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Projets
          </h5>
          <Link href="/portfolio/projects">
            Voir tout
          </Link>
        </div>
        <ul class="flex flex-col gap-4">
          {projects.map((project) => (
            <li>
              <ArrowCard entry={project} />
            </li>
          ))}
        </ul>
      </section>

      <!-- Section Veille -->
      <section class="animate space-y-6">
        <div class="flex flex-wrap gap-y-2 items-center justify-between">
          <h5 class="font-semibold text-black dark:text-white">
            Veille
          </h5>
          <Link href="/veille">
            Voir tout
          </Link>
        </div>
        <ul class="flex flex-col space-y-4">
          {veille.map((entry) => (
            <li>
              <div class="font-semibold text-black dark:text-white">
                {entry.data.title}
              </div>
              <p class="text-gray-600 dark:text-gray-400">
                {entry.data.description}
              </p>
            </li>
          ))}
        </ul>
      </section>

      <section class="animate space-y-4">
        <h5 class="font-semibold text-black dark:text-white">
          Contact
        </h5>
        <article>
          <p>
            Si vous souhaitez qu'on entre en contact, n'hésitez pas à m'envoyer un mail ou à 
            consulter mes réseaux professionnels ci-dessous !
          </p>
        </article>
        <ul class="flex flex-wrap gap-2">
          {SOCIALS.map((SOCIAL) => (
            <li class="flex gap-x-2 text-nowrap">
              <Link href={SOCIAL.HREF} external aria-label={`${SITE.NAME} on ${SOCIAL.NAME}`}>
                {SOCIAL.NAME}
              </Link>
              {"/"}
            </li>
          ))}
          <li class="line-clamp-1">
            <Link href={`mailto:${SITE.EMAIL}`} aria-label={`Email ${SITE.NAME}`}>
              {SITE.EMAIL}
            </Link>
          </li>
        </ul>
      </section>
    </div>
  </Container>
</PageLayout>
